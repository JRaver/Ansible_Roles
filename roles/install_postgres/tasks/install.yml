---
 - name: Validate Number of Master Nodes
   fail: msg="The number of master nodes must be exactly 1!"
   when: num_master | int != 1
 - name: Install Postgres repo
   yum: name={{ postgres_repo_url }} state=installed
 - name: Make var
   set_fact:  postgres_cut_ver={{  postgres_ver | replace ('.','') }}
 - name: Install Perl-XML
   yum: name=perl-XML-LibXML state=present
 - name: Install psycopg2
   yum: name=python-psycopg2 state=present
 - name: Install Postgres packages
   yum: name={{ item }} state=present
   with_items:
     - postgresql{{ postgres_cut_ver }} 
     - postgresql{{ postgres_cut_ver }}-contrib 
     - postgresql{{ postgres_cut_ver }}-devel 
     - postgresql{{ postgres_cut_ver }}-libs 
     - postgresql{{ postgres_cut_ver }}-plperl 
     - postgresql{{ postgres_cut_ver }}-server 
     - postgresql{{ postgres_cut_ver }}-debuginfo 
     - postgresql{{ postgres_cut_ver }}-docs
   register: yum_result
 - name: Create Phys Disk
   lvg: vg={{ vg_name }} pvs=/dev/{{ item }} 
   with_items: "{{ pv_disk }}"
 - lvol: vg={{ vg_name }} lv={{ item.name }} size={{ item.size }}
   with_items: "{{ lv_disk }}"
 - filesystem: fstype=ext4 dev=/dev/{{ vg_name }}/{{item.name}}
   with_items: "{{ lv_disk }}"
 - name: Create Dir {{mount_point }}
   file: path={{ mount_point }}/ state=directory owner={{ prog_user }} group={{ prog_user }} mode=0775 
 - name: Mount Point
   mount: name={{ mount_point }}/ src=/dev/{{ vg_name  }}/{{ mount_disk_name }} fstype=ext4 state=mounted
 - name: Create Other Dirs
   file: path={{ item.dir }} state=directory owner={{ prog_user }} group={{ prog_user }} mode={{ item.perm  }} recurse=yes
   with_items: "{{ data_dir }}"
 - name: check the current symlink
   stat: path=/var/lib/pgsql/{{ postgres_ver }}/data 
   register: data
 - name: remove the folder (only if it is a folder)
   file: path=/var/lib/pgsql/{{ postgres_ver }}/data state=absent
   when: data.stat.isdir is defined and data.stat.isdir
 - name: Links Dir
   file: dest=/var/lib/pgsql/{{ postgres_ver }}/data src={{ database_dir  }} state=link force=yes
 - name: chkconfig postgres on
   shell: chkconfig postgresql-{{ postgres_ver }} on
 - name: Untar pg_amq 0.3
   unarchive: src=pg_amqp_0.3.0.tar.gz dest=/tmp copy=yes
   when: yum_result.changed
 - name: Untar pg_amq 0.4
   unarchive: src=pg_amqp_0.4.0.tar.gz dest=/tmp copy=yes
   when: yum_result.changed
 - name: install pg_amq 0.3
#   shell: cd /tmp/pg_amqp/pg_amqp; /usr/bin/make clean; /usr/bin/make ;/usr/bin/make clean; /usr/bin/make install
   shell: cd /tmp/pg_amqp/pg_amqp; make clean; make ;make clean; make install
   args:
     executable: /bin/bash
   environment:
     PATH: $PATH:{{ bin_dir }}:/bin:/usr/bin/
   when: yum_result.changed
 - name: install pg_amq 0.4
   args:
     executable: /bin/bash
#   shell: cd /tmp/pg_amqp_0.4.0/; /usr/bin/make clean; /usr/bin/make ; /usr/bin/make install
   shell: cd /tmp/pg_amqp_0.4.0/; make clean; make ; make install
   environment:
     PATH: $PATH:{{ bin_dir }}:/bin:/usr/bin/
   when: yum_result.changed
 - name: Create .pgpass
   file: path={{ pgpass_file }} owner={{ prog_user }}  group={{ prog_user }} mode=0600 state=touch
 - name: Add connection params in .pggass
   lineinfile: dest={{ pgpass_file }} line="{{ item }}:{{ conf_port }}:replication:{{ rep_user }}:{{ rep_pass }}"
   with_items:
    - "{{ groups['master'] }}"
    - "{{ groups['slave'] }}"

   
   
